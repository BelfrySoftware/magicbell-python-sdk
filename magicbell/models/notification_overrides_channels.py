# coding: utf-8

"""
    MagicBell REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from magicbell.configuration import Configuration


class NotificationOverridesChannels(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        "in_app": "ChannelOverrides",
        "email": "ChannelOverrides",
        "web_push": "ChannelOverrides",
        "mobile_push": "ChannelOverrides",
    }

    attribute_map = {
        "in_app": "in_app",
        "email": "email",
        "web_push": "web_push",
        "mobile_push": "mobile_push",
    }

    def __init__(
        self,
        in_app=None,
        email=None,
        web_push=None,
        mobile_push=None,
        local_vars_configuration=None,
    ):  # noqa: E501
        """NotificationOverridesChannels - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._in_app = None
        self._email = None
        self._web_push = None
        self._mobile_push = None
        self.discriminator = None

        if in_app is not None:
            self.in_app = in_app
        if email is not None:
            self.email = email
        if web_push is not None:
            self.web_push = web_push
        if mobile_push is not None:
            self.mobile_push = mobile_push

    @property
    def in_app(self):
        """Gets the in_app of this NotificationOverridesChannels.  # noqa: E501


        :return: The in_app of this NotificationOverridesChannels.  # noqa: E501
        :rtype: ChannelOverrides
        """
        return self._in_app

    @in_app.setter
    def in_app(self, in_app):
        """Sets the in_app of this NotificationOverridesChannels.


        :param in_app: The in_app of this NotificationOverridesChannels.  # noqa: E501
        :type in_app: ChannelOverrides
        """

        self._in_app = in_app

    @property
    def email(self):
        """Gets the email of this NotificationOverridesChannels.  # noqa: E501


        :return: The email of this NotificationOverridesChannels.  # noqa: E501
        :rtype: ChannelOverrides
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this NotificationOverridesChannels.


        :param email: The email of this NotificationOverridesChannels.  # noqa: E501
        :type email: ChannelOverrides
        """

        self._email = email

    @property
    def web_push(self):
        """Gets the web_push of this NotificationOverridesChannels.  # noqa: E501


        :return: The web_push of this NotificationOverridesChannels.  # noqa: E501
        :rtype: ChannelOverrides
        """
        return self._web_push

    @web_push.setter
    def web_push(self, web_push):
        """Sets the web_push of this NotificationOverridesChannels.


        :param web_push: The web_push of this NotificationOverridesChannels.  # noqa: E501
        :type web_push: ChannelOverrides
        """

        self._web_push = web_push

    @property
    def mobile_push(self):
        """Gets the mobile_push of this NotificationOverridesChannels.  # noqa: E501


        :return: The mobile_push of this NotificationOverridesChannels.  # noqa: E501
        :rtype: ChannelOverrides
        """
        return self._mobile_push

    @mobile_push.setter
    def mobile_push(self, mobile_push):
        """Sets the mobile_push of this NotificationOverridesChannels.


        :param mobile_push: The mobile_push of this NotificationOverridesChannels.  # noqa: E501
        :type mobile_push: ChannelOverrides
        """

        self._mobile_push = mobile_push

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(lambda x: convert(x), value))
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(lambda item: (item[0], convert(item[1])), value.items())
                )
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NotificationOverridesChannels):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, NotificationOverridesChannels):
            return True

        return self.to_dict() != other.to_dict()
