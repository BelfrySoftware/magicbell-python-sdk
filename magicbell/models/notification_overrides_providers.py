# coding: utf-8

"""
    MagicBell REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from magicbell.configuration import Configuration


class NotificationOverridesProviders(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        "sendgrid": "object",
        "mailgun": "object",
        "postmark": "object",
        "ios": "object",
        "android": "object",
    }

    attribute_map = {
        "sendgrid": "sendgrid",
        "mailgun": "mailgun",
        "postmark": "postmark",
        "ios": "ios",
        "android": "android",
    }

    def __init__(
        self,
        sendgrid=None,
        mailgun=None,
        postmark=None,
        ios=None,
        android=None,
        local_vars_configuration=None,
    ):  # noqa: E501
        """NotificationOverridesProviders - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._sendgrid = None
        self._mailgun = None
        self._postmark = None
        self._ios = None
        self._android = None
        self.discriminator = None

        if sendgrid is not None:
            self.sendgrid = sendgrid
        if mailgun is not None:
            self.mailgun = mailgun
        if postmark is not None:
            self.postmark = postmark
        if ios is not None:
            self.ios = ios
        if android is not None:
            self.android = android

    @property
    def sendgrid(self):
        """Gets the sendgrid of this NotificationOverridesProviders.  # noqa: E501

        Set of key-value pairs that you can pass on to Sendgrid. Applied only if it is configured for your project.  # noqa: E501

        :return: The sendgrid of this NotificationOverridesProviders.  # noqa: E501
        :rtype: object
        """
        return self._sendgrid

    @sendgrid.setter
    def sendgrid(self, sendgrid):
        """Sets the sendgrid of this NotificationOverridesProviders.

        Set of key-value pairs that you can pass on to Sendgrid. Applied only if it is configured for your project.  # noqa: E501

        :param sendgrid: The sendgrid of this NotificationOverridesProviders.  # noqa: E501
        :type sendgrid: object
        """

        self._sendgrid = sendgrid

    @property
    def mailgun(self):
        """Gets the mailgun of this NotificationOverridesProviders.  # noqa: E501

        Set of key-value pairs that you can pass on to Mailgun. Applied only if it is configured for your project.  # noqa: E501

        :return: The mailgun of this NotificationOverridesProviders.  # noqa: E501
        :rtype: object
        """
        return self._mailgun

    @mailgun.setter
    def mailgun(self, mailgun):
        """Sets the mailgun of this NotificationOverridesProviders.

        Set of key-value pairs that you can pass on to Mailgun. Applied only if it is configured for your project.  # noqa: E501

        :param mailgun: The mailgun of this NotificationOverridesProviders.  # noqa: E501
        :type mailgun: object
        """

        self._mailgun = mailgun

    @property
    def postmark(self):
        """Gets the postmark of this NotificationOverridesProviders.  # noqa: E501

        Set of key-value pairs that you can pass on to Postmark. Applied only if it is configured for your project.  # noqa: E501

        :return: The postmark of this NotificationOverridesProviders.  # noqa: E501
        :rtype: object
        """
        return self._postmark

    @postmark.setter
    def postmark(self, postmark):
        """Sets the postmark of this NotificationOverridesProviders.

        Set of key-value pairs that you can pass on to Postmark. Applied only if it is configured for your project.  # noqa: E501

        :param postmark: The postmark of this NotificationOverridesProviders.  # noqa: E501
        :type postmark: object
        """

        self._postmark = postmark

    @property
    def ios(self):
        """Gets the ios of this NotificationOverridesProviders.  # noqa: E501

        Set of key-value pairs that you can pass on to APNs. Applied only if it is configured for your project.  # noqa: E501

        :return: The ios of this NotificationOverridesProviders.  # noqa: E501
        :rtype: object
        """
        return self._ios

    @ios.setter
    def ios(self, ios):
        """Sets the ios of this NotificationOverridesProviders.

        Set of key-value pairs that you can pass on to APNs. Applied only if it is configured for your project.  # noqa: E501

        :param ios: The ios of this NotificationOverridesProviders.  # noqa: E501
        :type ios: object
        """

        self._ios = ios

    @property
    def android(self):
        """Gets the android of this NotificationOverridesProviders.  # noqa: E501

        Set of key-value pairs that you can pass on to FCM. Applied only if it is configured for your project.  # noqa: E501

        :return: The android of this NotificationOverridesProviders.  # noqa: E501
        :rtype: object
        """
        return self._android

    @android.setter
    def android(self, android):
        """Sets the android of this NotificationOverridesProviders.

        Set of key-value pairs that you can pass on to FCM. Applied only if it is configured for your project.  # noqa: E501

        :param android: The android of this NotificationOverridesProviders.  # noqa: E501
        :type android: object
        """

        self._android = android

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(lambda x: convert(x), value))
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(lambda item: (item[0], convert(item[1])), value.items())
                )
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NotificationOverridesProviders):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, NotificationOverridesProviders):
            return True

        return self.to_dict() != other.to_dict()
